View(df$bank_account_id)
View(df$description)
table(df_other$desc2) %>% sort()
View(df_other)
df %>% group_by(userid,transaction_type) %>% summarize(W = n(class == 'Wallet')/n())
df %>% group_by(userid,transaction_type) %>% summarize(W = length(class == 'Wallet')/n())
df %>% group_by(userid,transaction_type) %>% summarize(W = n())
df %>% group_by(userid,transaction_type) %>% summarize(W = table(class)[1]/n())
table(df$class)
table(df$class)[1]
df %>% group_by(userid,transaction_type) %>% summarize(ach = table(class)[1]/n(),cc = table(class)[2]/n(),direct = table(class)[3]/n(),latefees = table(class)[4]/n(),online_transfers = table(class)[5]/n(),other = table(class)[6]/n(),paymenttechs = table(class)[7]/n(),W = table(class)[8]/n())
n_distinct(df$userid)
class(df$post_date)
diff.Date(df$post_date[1],df$post_date[2])
?diff.Date
?difftime
difftime(df$post_date[1],df$post_date[2],units = 'days')
difftime(df$post_date[2],df$post_date[1],units = 'days')
df %>% group_by(userid) %>% summarize( top5 = sum(sort(-amount[transaction_type == 'credit'])[1:5])/sum(amount[transaction_type == 'credit']))
df %>% group_by(userid) %>% summarize( top5 = sum(sort(amount[transaction_type == 'credit'])[1:5])/sum(amount[transaction_type == 'credit']))
sort(df$amount[transaction_type == 'credit'])
sort(df$amount[df$transaction_type == 'credit'])
df$amount[df$transaction_type == 'credit']
sort(df$amount[df$transaction_type == 'credit'])
class(df$amount[df$transaction_type == 'credit'])
arrange(df$amount[df$transaction_type == 'credit'])
arrange(df,desc(amount[df$transaction_type == 'credit']))
arrange(df[df$transaction_type == 'credit'],desc(amount))
sort(df$amount[df$transaction_type == 'credit'], decreasing = TRUE)
sort(df$amount[df$transaction_type == 'credit'], decreasing = TRUE)[1:5]
sum(sort(df$amount[df$transaction_type == 'credit'], decreasing = TRUE)[1:5])
sum(sort(df$amount[df$transaction_type == 'credit'], decreasing = TRUE)[1:5])/ sum(df$amount[df$transaction_type == 'credit'])
df %>% group_by(userid) %>% summarize( top5 = sum(sort(amount[transaction_type == 'credit'],decreasing = TRUE)[1:5])/sum(amount[transaction_type == 'credit']))
#sum(sort(df$amount[df$transaction_type == 'credit'], decreasing = TRUE)[1:5])/ sum(df$amount[df$transaction_type == 'credit'])
set.seed(4871)
m = matrix(sample(1:5,50,TRUE),nrow=10,ncol=5)
m
t(apply(m,1,diff))
t(apply(df$post_date[df$transaction_type == 'debit'],1,difftime))
df %>% group_by(userid) %>% summarize(top5 = sum(sort(amount[transaction_type == 'credit'],decreasing = TRUE)[1:5])/sum(amount[transaction_type == 'credit']),  daysbtnwith = -mean(difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days')))
#sum(sort(df$amount[df$transaction_type == 'credit'], decreasing = TRUE)[1:5])/ sum(df$amount[df$transaction_type == 'credit'])
difftime(df$post_date[1],df$post_date[2],units = 'days')
class(difftime(df$post_date[1],df$post_date[2],units = 'days'))
as.numeric(difftime(df$post_date[1],df$post_date[2],units = 'days'))
df %>% group_by(userid) %>% summarize(top5 = sum(sort(amount[transaction_type == 'credit'],decreasing = TRUE)[1:5])/sum(amount[transaction_type == 'credit']),  daysbtnwith = -mean(as.numeric(difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days'))))
df %>% group_by(userid) %>% summarize(daysbtnwith = -mean(difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days')))
#sum(sort(df$amount[df$transaction_type == 'credit'], decreasing = TRUE)[1:5])/ sum(df$amount[df$transaction_type == 'credit'])
df %>% group_by(userid) %>% summarize(top5 = sum(sort(amount[transaction_type == 'credit'],decreasing = TRUE)[1:5])/sum(amount[transaction_type == 'credit']),  daysbtnwith = -mean(as.numeric(difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days'))))
#sum(sort(df$amount[df$transaction_type == 'credit'], decreasing = TRUE)[1:5])/ sum(df$amount[df$transaction_type == 'credit'])
df %>% group_by(userid) %>% summarize(daysbtnwith = -mean(as.numeric(difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days'))))
df %>% (difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days'))
df %>% filter(userid == 215022)%>% mutate (timediff = difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days'))
df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = difftime(post_date, lag(post_date,1),units= 'days'))
df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = difftime(post_date, lag(post_date,1),units= 'days')) %>% mean(timediff)
df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = difftime(post_date, lag(post_date,1),units= 'days')) %>% mean(timediff, na.rm = TRUE)
df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = difftime(post_date, lag(post_date,1),units= 'days')) %>% mean(as.numeric(timediff), na.rm = TRUE)
df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = difftime(post_date, lag(post_date,1),units= 'days')) %>% mean(as.numeric(timediff))
df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = as.numeric(difftime(post_date, lag(post_date,1),units= 'days')))
df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = as.numeric(difftime(post_date, lag(post_date,1),units= 'days'))) %>% mean(timediff, na.rm = TRUE)
df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = as.numeric(difftime(post_date, lag(post_date,1),units= 'days'))) %>% mean(timediff)
class(timediff)
df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = as.numeric(difftime(post_date, lag(post_date,1),units= 'days'))) %>% sum(timediff)
test <- df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = as.numeric(difftime(post_date, lag(post_date,1),units= 'days'))) %>% sum(timediff)
test <- df %>% filter(userid == 215022, transaction_type == 'debit')%>% mutate (timediff = as.numeric(difftime(post_date, lag(post_date,1),units= 'days'))
)
test
sum(test$timediff)
sum(test$timediff,na.rm = TRUE)
mean(test$timediff,na.rm = TRUE)
View(test)
df %>% filter(userid == 215022, transaction_type == 'debit')%>% mean(as.numeric(difftime(post_date, lag(post_date,1),units= 'days')),na.rm = TRUE)
df %>% filter(userid == 215022, transaction_type == 'debit')%>% sum(as.numeric(difftime(post_date, lag(post_date,1),units= 'days')),na.rm = TRUE)
class(df$post_date)
test <- df %>% filter(userid == 215022)%>% mutate (timediff = as.numeric(difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days'))
)
df %>% filter(userid == 215022)%>% sum(amount)
names(df)
df %>% filter(userid == 215022)%>% sum(df$amount)
test <- df %>% filter(userid == 215022)
sum(as.numeric(difftime(test$post_date[test$transaction_type == 'debit'], lag(test$post_date[test$transaction_type == 'debit'],1),units= 'days')))
sum(as.numeric(difftime(test$post_date[test$transaction_type == 'debit'], lag(test$post_date[test$transaction_type == 'debit'],1),units= 'days')),na.rm = TRUE)
df %>% group_by(userid) %>% summarize(daysbtnwith = mean(as.numeric(difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days')),na.rm = TRUE))
df %>% group_by(userid) %>% summarize(top5 = sum(sort(amount[transaction_type == 'credit'],decreasing = TRUE)[1:5])/sum(amount[transaction_type == 'credit']),  avgdays_btn_withdrawals = mean(as.numeric(difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days')),na.rm = TRUE))
#sum(sort(df$amount[df$transaction_type == 'credit'], decreasing = TRUE)[1:5])/ sum(df$amount[df$transaction_type == 'credit'])
df %>% group_by(userid) %>% summarize(Coeff_Variation = mean(group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order))))
df %>% group_by(userid) %>% summarize(Coeff_Variation = mean( db(bank_account_id,running_balance,trans_order)[post_date %in% post_date]))
dball <- function(post_date,bank_account_id,running_balance,trans_order){
z= data.frame(matrix(ncol = 1, nrow = n_distinct(post_date)))
for(x in range(nrow(z)))
{z[x] = db(bank_account_id[post_date == post_date[x]],running_balance[post_date == post_date[x]],trans_order[post_date ==post_date[x]])}
return(sd(z)/mean(z))
}
df %>% group_by(userid) %>% summarize(Coeff_Variation = dball(post_date,bank_account_id,running_balance,trans_order))
dball(df$post_date[df$userid == 216716],df$bank_account_id[df$userid == 216716],df$running_balance[df$userid == 216716],df$trans_order[df$userid == 216716]))
dball(df$post_date[df$userid == 216716],df$bank_account_id[df$userid == 216716],df$running_balance[df$userid == 216716],df$trans_order[df$userid == 216716])
dball <- function(post_date,bank_account_id,running_balance,trans_order){
z= data.frame(matrix(ncol = 1, nrow = n_distinct(post_date)))
for(x in range(nrow(z)))
{z[x] = db(bank_account_id[post_date == post_date[x]],running_balance[post_date == post_date[x]],trans_order[post_date ==post_date[x]])}
return(sum(z))
}
dball(df$post_date[df$userid == 216716],df$bank_account_id[df$userid == 216716],df$running_balance[df$userid == 216716],df$trans_order[df$userid == 216716])
z= data.frame(matrix(ncol = 1, nrow = n_distinct(df$post_date[df$userid == 216716])))
for(x in range(nrow(z)))
{z[x] = db(df$bank_account_id[df$userid == 216716,df$post_date == df$post_date[x]],df$running_balance[df$userid == 216716,df$post_date == df$post_date[x]],trans_order[df$userid == 216716,df$post_date ==df$post_date[x]])}
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(tidyr))
userall = n_distinct(df$userid)
bankacc_all = n_distinct(df$bank_account_id)
df %>% group_by(userid) %>% summarize(number_of_bank_accounts = n_distinct(bank_account_id))
df$userid == 216716
library(xlsx)
install.packages('xlsx')
q11 <- df %>% group_by(userid) %>% summarize(number_of_bank_accounts = n_distinct(bank_account_id))
library(xlsx)
write.xlsx(q11, file = "Solutions_Q1.xlsx",
sheetName = "q11", row.names = FALSE)
write.xlsx(q11, file = "Solutions_Q1.xlsx",sheetName = "q11")
getwd()
df$post_date <- as.character(df$post_date)
#df <- df strsplit(post_date)
df <- separate(data = df, col = post_date, into = c("post_date", "post_date_time"), sep = "\\ ")
df$post_date <- as.POSIXlt(strptime(df$post_date, "%d-%m-%y"))
df$date_ym <-substr(df$post_date,0,7)
df$post_date <- as.Date(df$post_date)
write.xlsx(q12, file = "Solutions_Q1.xlsx",sheetName = "q12")
q12 <- df %>% group_by(bank_account_id) %>% summarize(number_months_bankacnt = n_distinct(date_ym))
setwd('D:/Challenges')
df <- read.csv('Biz2Credit_Challenge.csv', header = TRUE)
df <- df[,1:10]
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(tidyr))
userall = n_distinct(df$userid)
bankacc_all = n_distinct(df$bank_account_id)
q11 <- df %>% group_by(userid) %>% summarize(number_of_bank_accounts = n_distinct(bank_account_id))
library(xlsx)
write.xlsx(q11, file = "Solutions_Q1.xlsx",sheetName = "q11")
df$post_date <- as.character(df$post_date)
#df <- df strsplit(post_date)
df <- separate(data = df, col = post_date, into = c("post_date", "post_date_time"), sep = "\\ ")
df$post_date <- as.POSIXlt(strptime(df$post_date, "%d-%m-%y"))
df$date_ym <-substr(df$post_date,0,7)
df$post_date <- as.Date(df$post_date)
q12 <- df %>% group_by(bank_account_id) %>% summarize(number_months_bankacnt = n_distinct(date_ym))
write.xlsx(q12, file = "Solutions_Q1.xlsx",sheetName = "q12")
suppressPackageStartupMessages(library(data.table))
q13 <- df%>% group_by(bank_account_id,userid) %>% summarize(totalnum_credit = table(transaction_type)[1], totalnum_debit = table(transaction_type)[2], avgnum_credit = table(transaction_type)[1]/(uniqueN(date_ym[ transaction_type == 'credit'])), avgnum_debit = table(transaction_type)[2]/(uniqueN(date_ym[ transaction_type == 'debit'])))
write.xlsx(q13, file = "Solutions_Q1.xlsx",sheetName = "q13")
suppressPackageStartupMessages(library(data.table))
q13 <- df%>% group_by(bank_account_id,userid) %>% summarize(totalnum_credit = table(transaction_type)[1], totalnum_debit = table(transaction_type)[2], avgnum_credit = table(transaction_type)[1]/(uniqueN(date_ym[ transaction_type == 'credit'])), avgnum_debit = table(transaction_type)[2]/(uniqueN(date_ym[ transaction_type == 'debit'])))
write.xlsx(q13, file = "Solutions_Q1.xlsx",sheetName = "q13")
write.xlsx(q13, file = "Solutions_Q1.xlsx",sheetName = "q13")
View(q13)
write.xlsx(q13, file = "Solutions_Q1.xlsx",sheetName = "q13")
write.xlsx(q13, file = "Solutions_Q1.xlsx",sheetName = "q13")
write.xlsx(as.data.frame(q13), file = "Solutions_Q1.xlsx",sheetName = "q13")
q14 <- df%>% group_by(bank_account_id,userid) %>% summarize(total_value_credit = sum(amount[transaction_type == 'credit']), total_value_debit = sum(amount[transaction_type == 'debit']),avgvalue_credit = sum(amount[transaction_type == 'credit'])/(uniqueN(date_ym[ transaction_type == 'credit'])), avgvalue_debit = sum(amount[transaction_type == 'debit'])/(uniqueN(date_ym[ transaction_type == 'debit'])))
write.xlsx(as.data.frame(q14), file = "Solutions_Q1.xlsx",sheetName = "q14")
df2_sub1 <- df %>% filter(userid == 219154,bank_account_id == 4614)
ts1 <- df2_sub1 %>% group_by(post_date) %>% summarize(daily_balance = running_balance[trans_order == max(trans_order)],daily_withdrawals = sum(amount[transaction_type == 'debit']), daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']) )
View(ts1)
write.xlsx(as.data.frame(ts1), file = "Solutions_Q2_Q3.xlsx",sheetName = "q21_userid219154_bnkaccid4614")
ts1 %>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
ts1 %>% filter(post_date >= 2000-01-01)%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
ts1 %>% filter(post_date >= '2001-00-00')%>% ggplot(aes(x = post_date)) + geom_line(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
ts1 %>% filter(post_date >= '2001-00-00')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
ts1 %>% filter(post_date >= '2001-00-00')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
df2_sub2 <- df %>% filter(userid == 217867,bank_account_id == 5420)
ts2 <- df2_sub2 %>% group_by(post_date) %>% summarize(daily_balance = running_balance[trans_order == max(trans_order)],daily_withdrawals = sum(amount[transaction_type == 'debit']), daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']) )
write.xlsx(as.data.frame(ts2), file = "Solutions_Q2_Q3.xlsx",sheetName = "q22_userid217867_bnkaccid5420")
ts2 %>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance'))+ xlab("date") + ylab("Dollar Value") + geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
db <- function(bank_account_id,running_balance,trans_order){
y = 0
sum(for ( x in unique(bank_account_id)){y = y + running_balance[bank_account_id == x & trans_order == max(trans_order[bank_account_id== x])]})
return(y)}
df3_sub1 <- df %>% filter(userid == 219154)
ts11 <- df3_sub1 %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order),daily_withdrawals = sum(amount[transaction_type == 'debit']),daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']))
write.xlsx(as.data.frame(ts11), file = "Solutions_Q2_Q3.xlsx",sheetName = "q31_userid219154")
ts11 %>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("date") + ylab("Dollar Value") + geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
ts11 %>%filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("date") + ylab("Dollar Value") + geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
df3_sub2 <- df %>% filter(userid == 217867)
ts21 <- df3_sub2 %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order),daily_withdrawals = sum(amount[transaction_type == 'debit']),daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']))
write.xlsx(as.data.frame(ts21), file = "Solutions_Q2_Q3.xlsx",sheetName = "q32_userid217867")
ts21 %>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("date") + ylab("Dollar Value")+ geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
install.packages('openxlsx')
library('openxlsx')
Solutions_Q1 <- createWorkbook()
q11 <- df %>% group_by(userid) %>% summarize(number_of_bank_accounts = n_distinct(bank_account_id))
addWorksheet(Solutions_Q1, "q11")
writeData(Solutions_Q1, 1, q11)
df$post_date <- as.character(df$post_date)
#df <- df strsplit(post_date)
df <- separate(data = df, col = post_date, into = c("post_date", "post_date_time"), sep = "\\ ")
df$post_date <- as.POSIXlt(strptime(df$post_date, "%d-%m-%y"))
df$date_ym <-substr(df$post_date,0,7)
df$post_date <- as.Date(df$post_date)
setwd('D:/Challenges')
df <- read.csv('Biz2Credit_Challenge.csv', header = TRUE)
df <- df[,1:10]
Solutions_Q1 <- createWorkbook()
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(tidyr))
userall = n_distinct(df$userid)
bankacc_all = n_distinct(df$bank_account_id)
q11 <- df %>% group_by(userid) %>% summarize(number_of_bank_accounts = n_distinct(bank_account_id))
library(xlsx)
addWorksheet(Solutions_Q1, "q11")
writeData(Solutions_Q1, 1, q11)
#write.xlsx(q11, file = "Solutions_Q1.xlsx",sheetName = "q11")
df$post_date <- as.character(df$post_date)
#df <- df strsplit(post_date)
df <- separate(data = df, col = post_date, into = c("post_date", "post_date_time"), sep = "\\ ")
df$post_date <- as.POSIXlt(strptime(df$post_date, "%d-%m-%y"))
df$date_ym <-substr(df$post_date,0,7)
df$post_date <- as.Date(df$post_date)
q12 <- df %>% group_by(bank_account_id) %>% summarize(number_months_bankacnt = n_distinct(date_ym))
addWorksheet(Solutions_Q1, "q12")
writeData(Solutions_Q1, 2, q12)
suppressPackageStartupMessages(library(data.table))
q13 <- df%>% group_by(bank_account_id,userid) %>% summarize(totalnum_credit = table(transaction_type)[1], totalnum_debit = table(transaction_type)[2], avgnum_credit = table(transaction_type)[1]/(uniqueN(date_ym[ transaction_type == 'credit'])), avgnum_debit = table(transaction_type)[2]/(uniqueN(date_ym[ transaction_type == 'debit'])))
addWorksheet(Solutions_Q1, "q13")
writeData(Solutions_Q1, 3, q13)
#write.xlsx(as.data.frame(q13), file = "Solutions_Q1.xlsx",sheetName = "q13")
q14 <- df%>% group_by(bank_account_id,userid) %>% summarize(total_value_credit = sum(amount[transaction_type == 'credit']), total_value_debit = sum(amount[transaction_type == 'debit']),avgvalue_credit = sum(amount[transaction_type == 'credit'])/(uniqueN(date_ym[ transaction_type == 'credit'])), avgvalue_debit = sum(amount[transaction_type == 'debit'])/(uniqueN(date_ym[ transaction_type == 'debit'])))
addWorksheet(Solutions_Q1, "q14")
writeData(Solutions_Q1, 4, q14)
#write.xlsx(as.data.frame(q14), file = "Solutions_Q1.xlsx",sheetName = "q14")
saveWorkbook(Solutions_Q1, file = "Solutions_Q1.xlsx", overwrite = TRUE)
installr::install.rtools()
install.rtools()
Sys.getenv("R_ZIPCMD", "zip")
Sys.setenv(R_ZIPCMD= "C:/RBuildTools/3.4/bin/zip")
q14 <- df%>% group_by(bank_account_id,userid) %>% summarize(total_value_credit = sum(amount[transaction_type == 'credit']), total_value_debit = sum(amount[transaction_type == 'debit']),avgvalue_credit = sum(amount[transaction_type == 'credit'])/(uniqueN(date_ym[ transaction_type == 'credit'])), avgvalue_debit = sum(amount[transaction_type == 'debit'])/(uniqueN(date_ym[ transaction_type == 'debit'])))
addWorksheet(Solutions_Q1, "q14")
saveWorkbook(Solutions_Q1, file = "Solutions_Q1.xlsx", overwrite = TRUE)
Solutions_Q2_Q3 <- createWorkbook()
df2_sub1 <- df %>% filter(userid == 219154,bank_account_id == 4614)
ts1 <- df2_sub1 %>% group_by(post_date) %>% summarize(daily_balance = running_balance[trans_order == max(trans_order)],daily_withdrawals = sum(amount[transaction_type == 'debit']), daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']) )
addWorksheet(Solutions_Q2_Q3, "q21_userid219154_bnkaccid4614")
writeData(Solutions_Q2_Q3, 1,as.data.frame(ts1) )
df2_sub2 <- df %>% filter(userid == 217867,bank_account_id == 5420)
ts2 <- df2_sub2 %>% group_by(post_date) %>% summarize(daily_balance = running_balance[trans_order == max(trans_order)],daily_withdrawals = sum(amount[transaction_type == 'debit']), daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']) )
addWorksheet(Solutions_Q2_Q3, "q22_userid217867_bnkaccid5420")
writeData(Solutions_Q2_Q3, 2,as.data.frame(ts2) )
db <- function(bank_account_id,running_balance,trans_order){
y = 0
sum(for ( x in unique(bank_account_id)){y = y + running_balance[bank_account_id == x & trans_order == max(trans_order[bank_account_id== x])]})
return(y)}
df3_sub1 <- df %>% filter(userid == 219154)
ts11 <- df3_sub1 %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order),daily_withdrawals = sum(amount[transaction_type == 'debit']),daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']))
addWorksheet(Solutions_Q2_Q3, "q31_userid219154")
writeData(Solutions_Q2_Q3, 3,as.data.frame(ts11) )
df3_sub2 <- df %>% filter(userid == 217867)
ts21 <- df3_sub2 %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order),daily_withdrawals = sum(amount[transaction_type == 'debit']),daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']))
addWorksheet(Solutions_Q2_Q3, "q32_userid217867")
saveWorkbook(Solutions_Q2_Q3, file = "Solutions_Q2_Q3.xlsx", overwrite = TRUE)
writeData(Solutions_Q2_Q3, 4,as.data.frame(ts21) )
saveWorkbook(Solutions_Q2_Q3, file = "Solutions_Q2_Q3.xlsx", overwrite = TRUE)
write.xlsx(as.data.frame(ts21), file = "Solutions_Q2_Q3.xlsx",sheetName = "q32_userid217867")
Solutions_Q2_Q3 <- createWorkbook()
df2_sub1 <- df %>% filter(userid == 219154,bank_account_id == 4614)
ts1 <- df2_sub1 %>% group_by(post_date) %>% summarize(daily_balance = running_balance[trans_order == max(trans_order)],daily_withdrawals = sum(amount[transaction_type == 'debit']), daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']) )
suppressPackageStartupMessages(library(ggplot2))
ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
addWorksheet(Solutions_Q2_Q3, "q21_userid219154_bnkaccid4614")
writeData(Solutions_Q2_Q3, 1,as.data.frame(ts1) )
#write.xlsx(as.data.frame(ts1), file = "Solutions_Q2_Q3.xlsx",sheetName = "q21_userid219154_bnkaccid4614")
df2_sub2 <- df %>% filter(userid == 217867,bank_account_id == 5420)
ts2 <- df2_sub2 %>% group_by(post_date) %>% summarize(daily_balance = running_balance[trans_order == max(trans_order)],daily_withdrawals = sum(amount[transaction_type == 'debit']), daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']) )
addWorksheet(Solutions_Q2_Q3, "q22_userid217867_bnkaccid5420")
writeData(Solutions_Q2_Q3, 2,as.data.frame(ts2) )
#write.xlsx(as.data.frame(ts2), file = "Solutions_Q2_Q3.xlsx",sheetName = "q22_userid217867_bnkaccid5420")
#suppressPackageStartupMessages(library(ggplot2))
ts2 %>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance'))+ xlab("date") + ylab("Dollar Value") + geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
db <- function(bank_account_id,running_balance,trans_order){
y = 0
sum(for ( x in unique(bank_account_id)){y = y + running_balance[bank_account_id == x & trans_order == max(trans_order[bank_account_id== x])]})
return(y)}
df3_sub1 <- df %>% filter(userid == 219154)
ts11 <- df3_sub1 %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order),daily_withdrawals = sum(amount[transaction_type == 'debit']),daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']))
addWorksheet(Solutions_Q2_Q3, "q31_userid219154")
writeData(Solutions_Q2_Q3, 3,as.data.frame(ts11) )
#write.xlsx(as.data.frame(ts11), file = "Solutions_Q2_Q3.xlsx",sheetName = "q31_userid219154")
ts11 %>%filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("date") + ylab("Dollar Value") + geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
df3_sub2 <- df %>% filter(userid == 217867)
ts21 <- df3_sub2 %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order),daily_withdrawals = sum(amount[transaction_type == 'debit']),daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']))
addWorksheet(Solutions_Q2_Q3, "q32_userid217867")
writeData(Solutions_Q2_Q3, 4,as.data.frame(ts21) )
#write.xlsx(as.data.frame(ts21), file = "Solutions_Q2_Q3.xlsx",sheetName = "q32_userid217867")
ts21 %>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("date") + ylab("Dollar Value")+ geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
saveWorkbook(Solutions_Q2_Q3, file = "Solutions_Q2_Q3.xlsx", overwrite = TRUE)
z= data.frame(matrix(ncol = 1, nrow = n_distinct(df$userid)))
duserid <- unique(df$userid)
for(i in range(nrow(z))){
df_user <- df %>% filter(userid == duserid[i])
ts <- df_user %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order))
z[i] = sd(ts)/mean(ts)
}
z= data.frame(matrix(ncol = 1, nrow = n_distinct(df$userid)))
duserid <- unique(df$userid)
for(i in range(nrow(z))){
df_user <- df %>% filter(userid == duserid[i])
ts <- df_user %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order))
z[i] = sd(ts$daily_balance)/mean(ts$daily_balance)
}
z= data.frame(matrix(ncol = 1, nrow = n_distinct(df$userid)))
duserid <- unique(df$userid)
for(i in range(nrow(z))){
df_user <- df %>% filter(userid == duserid[i])
ts <- df_user %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order))
z[i,1] = sd(ts$daily_balance)/mean(ts$daily_balance)
}
z
z= data.frame(matrix(ncol = 1, nrow = n_distinct(df$userid)))
duserid <- unique(df$userid)
for(i in range(1)){
df_user <- df %>% filter(userid == duserid[i])
ts <- df_user %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order))
z[i,1] = sd(ts$daily_balance)/mean(ts$daily_balance)
}
z
z= data.frame(matrix(ncol = 1, nrow = n_distinct(df$userid)))
duserid <- unique(df$userid)
for(i in range(2)){
df_user <- df %>% filter(userid == duserid[i])
ts <- df_user %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order))
z[i,1] = sd(ts$daily_balance)/mean(ts$daily_balance)
}
z
z= data.frame(matrix(ncol = 1, nrow = n_distinct(df$userid)))
duserid <- unique(df$userid)
for(i in range(2)){
df_user <- df %>% filter(userid == duserid[i])
ts <- df_user %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order))
z[i,1] = sd(ts$daily_balance)/mean(ts$daily_balance)
}
z
z= data.frame(matrix(ncol = 1, nrow = n_distinct(df$userid)))
duserid <- unique(df$userid)
for(i in 1:nrow(z)){
df_user <- df %>% filter(userid == duserid[i])
ts <- df_user %>% group_by(post_date) %>% summarise(daily_balance = db(bank_account_id,running_balance,trans_order))
z[i,1] = sd(ts$daily_balance)/mean(ts$daily_balance)
}
z
z
q5 <- df %>% group_by(userid) %>% summarize(top5 = sum(sort(amount[transaction_type == 'credit'],decreasing = TRUE)[1:5])/sum(amount[transaction_type == 'credit']),  avgdays_btn_withdrawals = mean(as.numeric(difftime(post_date[transaction_type == 'debit'], lag(post_date[transaction_type == 'debit'],1),units= 'days')),na.rm = TRUE))
q5
q5$Coeff_Variation <- z
View(q5)
colnames(z) <- 'Coefficient_of_Variation'
q5$Coeff_Variation <- z
View(q5)
colnames(z) <- ''
q5$Coeff_Variation <- z
View(q5)
q5 %>% ggplot(aes(x= top5, y= Coeff_Variation)) + geom_point()
q5 %>% ggplot(aes(x= avgdays_btn_withdrawals, y= Coeff_Variation)) + geom_point()
q5 %>% ggplot(aes(x= avgdays_btn_withdrawals, y= top5)) + geom_point()
p1 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance'))+ xlab("Date") + ylab("Dollar Value")
p2 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ xlab("Date") + ylab("Dollar Value")
multiplot(p1,p2,cols = 2)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
Solutions_Q2_Q3 <- createWorkbook()
df2_sub1 <- df %>% filter(userid == 219154,bank_account_id == 4614)
ts1 <- df2_sub1 %>% group_by(post_date) %>% summarize(daily_balance = running_balance[trans_order == max(trans_order)],daily_withdrawals = sum(amount[transaction_type == 'debit']), daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']) )
suppressPackageStartupMessages(library(ggplot2))
ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
#addWorksheet(Solutions_Q2_Q3, "q21_userid219154_bnkaccid4614")
#writeData(Solutions_Q2_Q3, 1,as.data.frame(ts1) )
#write.xlsx(as.data.frame(ts1), file = "Solutions_Q2_Q3.xlsx",sheetName = "q21_userid219154_bnkaccid4614")
p1 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance'))+ xlab("Date") + ylab("Dollar Value")
p2 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ xlab("Date") + ylab("Dollar Value")
multiplot(p1,p2,cols = 2)
Solutions_Q2_Q3 <- createWorkbook()
df2_sub1 <- df %>% filter(userid == 219154,bank_account_id == 4614)
ts1 <- df2_sub1 %>% group_by(post_date) %>% summarize(daily_balance = running_balance[trans_order == max(trans_order)],daily_withdrawals = sum(amount[transaction_type == 'debit']), daily_deposits = sum(amount[transaction_type == 'credit']), daily_turnarnd = -sum(amount[transaction_type == 'debit']) + sum(amount[transaction_type == 'credit']) )
suppressPackageStartupMessages(library(ggplot2))
ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
#addWorksheet(Solutions_Q2_Q3, "q21_userid219154_bnkaccid4614")
#writeData(Solutions_Q2_Q3, 1,as.data.frame(ts1) )
#write.xlsx(as.data.frame(ts1), file = "Solutions_Q2_Q3.xlsx",sheetName = "q21_userid219154_bnkaccid4614")
p1 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance'))+ xlab("Date") + ylab("Dollar Value")
p2 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ xlab("Date") + ylab("Dollar Value")
p3 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) +geom_point(aes(y = daily_deposits, color = 'daily_deposits'))+ xlab("Date") + ylab("Dollar Value")
multiplot(p1,p2,p3,cols = 2)
p1 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance'))+ xlab("Date") + ylab("Dollar Value")
p2 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ xlab("Date") + ylab("Dollar Value")
p3 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) +geom_point(aes(y = daily_deposits, color = 'daily_deposits'))+ xlab("Date") + ylab("Dollar Value")
p4 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
multiplot(p1,p2,p3,p4,cols = 2)
p1 <- ts1 %>% filter(post_date >= '2001-01-01', daily_balance <= 5000)%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance'))+ xlab("Date") + ylab("Dollar Value")
p2 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ xlab("Date") + ylab("Dollar Value")
p3 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) +geom_point(aes(y = daily_deposits, color = 'daily_deposits'))+ xlab("Date") + ylab("Dollar Value")
p4 <- ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
multiplot(p1,p2,p3,p4,cols = 2)
ts1 %>% filter(post_date >= '2001-01-01', daily_balance <= 5000)%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
ts1 %>% filter(post_date >= '2001-01-01', daily_balance <= 5000, daily_withdrawals <= 5000)%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
ts1 %>% filter(post_date >= '2001-01-01', daily_balance <= 5000)%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + geom_line()+ xlab("Date") + ylab("Dollar Value")
ts1 %>% filter(post_date >= '2001-01-01', daily_balance <= 5000)%>% ggplot(aes(x = post_date, y = daily_balance)) + geom_point() + geom_line()+ xlab("Date") + ylab("Dollar Value")
ts1 %>% filter(post_date >= '2001-01-01', daily_balance <= 5000)%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + geom_line() + xlab("Date") + ylab("Dollar Value")
ts1 %>% filter(post_date >= '2001-01-01', daily_balance <= 5000)%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + geom_line(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value")
#Debit/Credit Ratio
zz <- data.frame(matrix(ncol = 1, nrow = n_distinct(df$userid)))
duserid <- unique(df$userid)
for(i in 1:nrow(zz)){
#z1= data.frame(matrix(ncol = 2, nrow = n_distinct(df$userid)))
#colnames(z1) <- c('daily_withdrawals','daily_deposits')
df_user <- df %>% filter(userid == duserid[i])
tsz <- df_user %>% group_by(post_date) %>% summarise(daily_withdrawals = sum(amount[transaction_type == 'debit']),daily_deposits = sum(amount[transaction_type == 'credit']))
zz[i,1]= sum(tsz$daily_withdrawals, na.rm  = TRUE)/sum(tsz$daily_deposits, na.rm  = TRUE)
}
View(zz)
df %>% group_by(userid,transaction_type) %>% summarize(ach = table(class)[1]/n(),cc = table(class)[2]/n(),direct = table(class)[3]/n(),latefees = table(class)[4]/n(),online_transfers = table(class)[5]/n(),other = table(class)[6]/n(),paymenttechs = table(class)[7]/n(),Wallet = table(class)[8]/n())
#making categories
Travel<- "AIRLINE|AIRWAYS|FRONTIER|CHEAPOAIR|AMTRAK|ENTERPRISE|HOTEL|GREYHOUND|MEGABUS|TRAILWAYS|TRAVEL|ROAD|RAIL|BOAT|EXPEDIA|KAYAK|UBER"
Food <- "RESTAURANTS|CAFE|STARBUCKS|COFFEE|MCDONALD'S|TACO|WENDY'S|PIZZA|CHIPOTLE|ICECREAM|JIMMY|SANDWICH|BURGER|BREAD|ARBY|BAGELS|CHICKEN|KFC|CHICK-FIL-A|KITCHEN|IHOP|GRILL|BAR|Restaurant|Thai|Chinese|Indian|DHOOM|DENNY'S|DUNKIN|FOOD|GUARAPO'S|TULSI|Tulsi|ChowNow|PITA|CLEAN JUICE"
Supermarkets <- "TARGET|WAL-MART|WALMART|WALGREENS|COSTCO|TRADER JOE'S|SAMSCLUB|DOLLAR|SUPERCENTER|MART|CVS|HOMEDEPOT.COM|HOME DE|BURLNGTON|KENNETH COLE|CORNER STORE|WHOLEFDS|HARRIS TEETER|SAFEWAY STORE|SHIRAZ MARKET|RESTAURANT DEPOT|TALBOTS|APPLIANCE|GROUPON|AMAZON"
Utilities_Gasoline <- "WATER|ELECTRIC|INTRNT|INTERNET|GAS|UTILITY|SHELL|OIL|FUEL|CHEVRON|EXXON|Energy"
Loan_Insurance <- "Loan|MTG|INSURANCE|INSUR|STATE FARM|GMFINANCIA|PREM|ACCESS INS|HOMELOA|LIFE INS|ELEPHANT INS HENRICO"
#Fees <- "FEES|FEE|INTEREST"
Entertainment <- "CABLE|PERFORMANCE|MUSIC|MOVIES|CINE|SHOW|THEATRE|DIRECTV|Gym|FIT|TV|DISH NETWORK|VERIZON WRLS|Verizon|COMCAST|AT&amp;T|VERIZON|NETFLIX"
Direct_deposit_withdrawal <- "CHECK | Customer withdrawal|ATM|Check|check|WIRE|Wire|wire|WITHDRAWAL|CHECKS "
df$class <- "Other"
Credit_card_pay <- "AMERICAN EXPRESS|CAPITAL ONE|WELLS FARGO|BANK"
################################################################################################################
Wallet <- "VENMO|STRIPE |PAYPAL|SQUARE |BILL PAY|MOBILE PMT|MOBILE DEPOSIT"
Credit_Card <- "VISA DD|CARD|VISA"
Direct <- "CHECK#|CASHED |PAID CHECK|CHECK #|CUSTOMER WITHDRAWAL|CHECK WITH IMAGE|SUBSTITUTE CHECK|CHECKS |ATM|WITHDRAWAL MADE|BANK CHECK OR DRAFT"
ACH <- "ACH"
Payment_tech <- "HRTLAND|HEARTLDP"
Late_Fees <- "OVERDRAFT"
Online <- "ONLINE |INTERNET|WIRE|EDEPOSIT|EWITHDRAWAL"
df$description <-as.character(df$description)
df$description <- sapply(df$description, toupper)
df$class = ifelse(grepl(Direct, df$description), "Direct",
ifelse(grepl(ACH, df$description), "ACH",
ifelse(grepl(Online,df$description), "Online",ifelse(grepl(Wallet,df$description), "Wallet",ifelse(grepl(Payment_tech,df$description), "Payment_tech",ifelse(grepl(Late_Fees,df$description), "Late_Fees",ifelse(grepl(Credit_Card,df$description), "Credit_Card","Other")))))))
df_other <- df %>% filter(class == 'Other')
df %>% group_by(userid,transaction_type) %>% summarize(ach = table(class)[1]/n(),cc = table(class)[2]/n(),direct = table(class)[3]/n(),latefees = table(class)[4]/n(),online_transfers = table(class)[5]/n(),other = table(class)[6]/n(),paymenttechs = table(class)[7]/n(),Wallet = table(class)[8]/n())
Solutions_Q4_Q5 <- createWorkbook()
q4 <- df %>% group_by(userid,transaction_type) %>% summarize(ach = table(class)[1]/n(),cc = table(class)[2]/n(),direct = table(class)[3]/n(),latefees = table(class)[4]/n(),online_transfers = table(class)[5]/n(),other = table(class)[6]/n(),paymenttechs = table(class)[7]/n(),Wallet = table(class)[8]/n())
addWorksheet(Solutions_Q4_Q5, "q4")
writeData(Solutions_Q4_Q5, 4,as.data.frame(q4) )
writeData(Solutions_Q4_Q5, 1,as.data.frame(q4) )
addWorksheet(Solutions_Q4_Q5, "q5")
writeData(Solutions_Q4_Q5, 2,as.data.frame(q5) )
writeData(Solutions_Q4_Q5, 2,as.data.frame(q5) )
type(q5)
class(q5)
class(as.data.frame(q5))
writeData(Solutions_Q4_Q5, 2,as.data.frame(q5) )
#Debit/Credit Ratio
zz <- data.frame(matrix(ncol = 1, nrow = n_distinct(df$userid)))
duserid <- unique(df$userid)
for(i in 1:nrow(zz)){
#z1= data.frame(matrix(ncol = 2, nrow = n_distinct(df$userid)))
#colnames(z1) <- c('daily_withdrawals','daily_deposits')
df_user <- df %>% filter(userid == duserid[i])
tsz <- df_user %>% group_by(post_date) %>% summarise(daily_withdrawals = sum(amount[transaction_type == 'debit']),daily_deposits = sum(amount[transaction_type == 'credit']))
zz[i,1]= sum(tsz$daily_withdrawals, na.rm  = TRUE)/sum(tsz$daily_deposits, na.rm  = TRUE)
}
colnames(zz) <- ''
q5$debitcredit_ratio <- zz
View(q5)
writeData(Solutions_Q4_Q5, 2,as.data.frame(q5) )
q5 <- as.data.frame(q5)
writeData(Solutions_Q4_Q5, 2,q5)
writeData(Solutions_Q4_Q5, 2,q5)
writeData(Solutions_Q4_Q5,2,q5)
saveWorkbook(Solutions_Q4_Q5, file = "Solutions_Q4_Q5.xlsx", overwrite = TRUE)
write.csv(q5, 'q5.csv')
ts1 %>% filter(post_date >= '2001-01-01')%>% ggplot(aes(x = post_date)) + geom_point(aes(y = daily_balance,color = 'daily_balance')) + xlab("Date") + ylab("Dollar Value") +geom_point(aes(y = daily_withdrawals, color = 'daily_withdrawals'))+ geom_point(aes(y = daily_deposits, color = 'daily_deposits'))
